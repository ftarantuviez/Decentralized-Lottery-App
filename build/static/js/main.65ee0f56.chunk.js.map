{"version":3,"sources":["web3.js","lottery.js","App.js","reportWebVitals.js","index.js"],"names":["window","ethereum","request","method","web3","Web3","eth","Contract","constant","inputs","name","outputs","type","payable","stateMutability","App","state","manager","players","balance","value","message","handleSubmit","event","a","preventDefault","alert","enable","getAccounts","accounts","setState","lottery","methods","enter","send","from","utils","toWei","pickAWinner","pickWinner","call","getPlayers","getBalance","options","address","this","length","fromWei","onSubmit","onChange","target","onClick","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.65ee0f56.chunk.js","sourcesContent":["import Web3 from \"web3\";\n\nwindow.ethereum?.request({ method: \"eth_requestAccounts\" });\n\nconst web3 = new Web3(window.ethereum);\n\nexport default web3;\n","import web3 from \"./web3\";\n\nconst address = \"0xd01f4c90F9e8FA799F5f0fEbca16A0718baee116\";\nconst abi = [\n  {\n    constant: true,\n    inputs: [],\n    name: \"manager\",\n    outputs: [{ name: \"\", type: \"address\" }],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    constant: false,\n    inputs: [],\n    name: \"pickWinner\",\n    outputs: [],\n    payable: false,\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: \"getPlayers\",\n    outputs: [{ name: \"\", type: \"address[]\" }],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    constant: false,\n    inputs: [],\n    name: \"enter\",\n    outputs: [],\n    payable: true,\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    constant: true,\n    inputs: [{ name: \"\", type: \"uint256\" }],\n    name: \"players\",\n    outputs: [{ name: \"\", type: \"address\" }],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    payable: false,\n    stateMutability: \"nonpayable\",\n    type: \"constructor\",\n  },\n];\n\nexport default new web3.eth.Contract(abi, address);\n","import \"./App.css\";\nimport React from \"react\";\nimport lottery from \"./lottery\";\nimport web3 from \"./web3\";\n\nclass App extends React.Component {\n  state = { manager: \"\", players: [], balance: \"\", value: \"\", message: \"\" };\n\n  async componentDidMount() {\n    const manager = await lottery.methods.manager().call();\n    const players = await lottery.methods.getPlayers().call();\n    const balance = await web3.eth.getBalance(lottery.options.address);\n\n    this.setState({ manager, players, balance });\n  }\n\n  handleSubmit = async (event) => {\n    event.preventDefault();\n    if (!window.ethereum) {\n      return alert(\"Install Metamask please!\");\n    }\n    await window.ethereum.enable();\n    const accounts = await web3.eth.getAccounts();\n\n    this.setState({ message: \"Waiting on transaction success...\" });\n    await lottery.methods.enter().send({\n      from: accounts[0],\n      value: web3.utils.toWei(this.state.value, \"ether\"),\n    });\n\n    this.setState({ message: \"You have been entered!\" });\n  };\n\n  pickAWinner = async (event) => {\n    if (!window.ethereum) {\n      return alert(\"Install Metamask please!\");\n    }\n    await window.ethereum.enable();\n    const accounts = await web3.eth.getAccounts();\n\n    this.setState({ message: \"Waiting on transaction success...\" });\n\n    await lottery.methods.pickWinner().send({ from: accounts[0] });\n\n    this.setState({ message: \"A winner has been picked!\" });\n  };\n\n  render() {\n    return (\n      <div>\n        <h2>Lottery Contract</h2>\n        <p>\n          This contract is managed by {this.state.manager} <br /> There are\n          currently {this.state.players.length} competing to win{\" \"}\n          {web3.utils.fromWei(this.state.balance, \"ether\")} ether!\n        </p>\n        <hr />\n\n        <form onSubmit={this.handleSubmit}>\n          <h4>Want to try your luck?</h4>\n          <div>\n            <label>Amount of ether to enter</label>\n            <input\n              onChange={(event) => this.setState({ value: event.target.value })}\n              value={this.state.value}\n            />\n          </div>\n          <button type=\"submit\">Enter</button>\n        </form>\n        <hr />\n        <h4>Ready to pick a winner</h4>\n\n        <button onClick={this.pickAWinner}>Pick a winner</button>\n        <hr />\n\n        <p>{this.state.message}</p>\n      </div>\n    );\n  }\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}